// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum TransactionType {
  Income
  Expense
}

model User {
  id String @id @unique
  isPro Boolean @default(false)
  firstName String?
  lastName  String?
  transactions Transaction[]
  userCategories UserCategory[]
  budgets Budget[]
}

model Transaction {
  id         String        @id @default(uuid())
  userId     String
  user       User          @relation(fields: [userId], references: [id])
  categoryName String
  categoryId String?
  category   Category?      @relation(fields: [categoryId], references: [id])
  userCategoryId String?
  userCategory UserCategory? @relation(fields: [userCategoryId], references: [id])
  budgetName String
  budgetId   String?
  budget     Budget?       @relation(fields: [budgetId], references: [id])
  type      TransactionType 
  title      String
  amount     Float
  date       DateTime
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt
}

model Category { 
  id String @id @default(uuid())
  name String
  transactions Transaction[]
}

model UserCategory {
  id String @id @default(uuid())
  name String
  userId String
  user User @relation(fields: [userId], references: [id])
  transactions Transaction[]
}

model Budget {
  id         String      @id @default(uuid())
  name       String
  userId     String
  user       User        @relation(fields: [userId], references: [id])
  amount     Float
  startDate  DateTime
  endDate    DateTime
  transactions Transaction[]
}




